<<<<<<< HEAD
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var ApolloConsumer_1 = tslib_1.__importDefault(require("./ApolloConsumer"));
var hoist_non_react_statics_1 = tslib_1.__importDefault(require("hoist-non-react-statics"));
var ts_invariant_1 = require("ts-invariant");
function getDisplayName(WrappedComponent) {
    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
}
function withApollo(WrappedComponent, operationOptions) {
    if (operationOptions === void 0) { operationOptions = {}; }
    var withDisplayName = "withApollo(" + getDisplayName(WrappedComponent) + ")";
    var WithApollo = (function (_super) {
        tslib_1.__extends(WithApollo, _super);
=======
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import ApolloConsumer from './ApolloConsumer';
var invariant = require('invariant');
var hoistNonReactStatics = require('hoist-non-react-statics');
function getDisplayName(WrappedComponent) {
    return WrappedComponent.displayName || WrappedComponent.name || 'Component';
}
export default function withApollo(WrappedComponent, operationOptions) {
    if (operationOptions === void 0) { operationOptions = {}; }
    var withDisplayName = "withApollo(" + getDisplayName(WrappedComponent) + ")";
    var WithApollo = (function (_super) {
        __extends(WithApollo, _super);
>>>>>>> b22d4f639358533e1bbd355b77d7a3342c6a63e8
        function WithApollo(props) {
            var _this = _super.call(this, props) || this;
            _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);
            return _this;
        }
        WithApollo.prototype.getWrappedInstance = function () {
<<<<<<< HEAD
            ts_invariant_1.invariant(operationOptions.withRef, "To access the wrapped instance, you need to specify " + "{ withRef: true } in the options");
=======
            invariant(operationOptions.withRef, "To access the wrapped instance, you need to specify " + "{ withRef: true } in the options");
>>>>>>> b22d4f639358533e1bbd355b77d7a3342c6a63e8
            return this.wrappedInstance;
        };
        WithApollo.prototype.setWrappedInstance = function (ref) {
            this.wrappedInstance = ref;
        };
        WithApollo.prototype.render = function () {
            var _this = this;
<<<<<<< HEAD
            return (React.createElement(ApolloConsumer_1.default, null, function (client) {
=======
            return (React.createElement(ApolloConsumer, null, function (client) {
>>>>>>> b22d4f639358533e1bbd355b77d7a3342c6a63e8
                var props = Object.assign({}, _this.props, {
                    client: client,
                    ref: operationOptions.withRef ? _this.setWrappedInstance : undefined,
                });
<<<<<<< HEAD
                return React.createElement(WrappedComponent, tslib_1.__assign({}, props));
=======
                return React.createElement(WrappedComponent, __assign({}, props));
>>>>>>> b22d4f639358533e1bbd355b77d7a3342c6a63e8
            }));
        };
        WithApollo.displayName = withDisplayName;
        WithApollo.WrappedComponent = WrappedComponent;
        return WithApollo;
    }(React.Component));
<<<<<<< HEAD
    return hoist_non_react_statics_1.default(WithApollo, WrappedComponent, {});
}
exports.default = withApollo;
=======
    return hoistNonReactStatics(WithApollo, WrappedComponent, {});
}
>>>>>>> b22d4f639358533e1bbd355b77d7a3342c6a63e8
//# sourceMappingURL=withApollo.js.map