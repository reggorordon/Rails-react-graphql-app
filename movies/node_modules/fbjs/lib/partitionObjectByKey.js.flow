/**
 * Copyright 2015-present Facebook. All Rights Reserved.
 *
 * @providesModule partitionObjectByKey
 * @typechecks
 * @flow
 */
<<<<<<< HEAD

'use strict';

var partitionObject = require('./partitionObject');

=======
'use strict';

import type Set from "./Set";

var partitionObject = require("./partitionObject");
>>>>>>> b22d4f639358533e1bbd355b77d7a3342c6a63e8
/**
 * Partitions the enumerable properties of an object into two objects, given a
 * whitelist `Set` for the first object. This is comparable to
 * `whitelistObjectKeys`, but eventually keeping all the keys. Returns a tuple
 * of objects `[first, second]`.
 */
<<<<<<< HEAD
=======


>>>>>>> b22d4f639358533e1bbd355b77d7a3342c6a63e8
function partitionObjectByKey(source: Object, whitelist: Set<string>): [Object, Object] {
  return partitionObject(source, (_, key) => whitelist.has(key));
}

module.exports = partitionObjectByKey;