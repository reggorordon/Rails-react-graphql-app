<<<<<<< HEAD
{"version":3,"file":"bundle.umd.js","sources":["bundle.esm.js"],"sourcesContent":["import { getFragmentQueryDocument } from 'apollo-utilities';\n\nfunction queryFromPojo(obj) {\n    var op = {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [op],\n    };\n    return out;\n}\nfunction fragmentFromPojo(obj, typename) {\n    var frag = {\n        kind: 'FragmentDefinition',\n        typeCondition: {\n            kind: 'NamedType',\n            name: {\n                kind: 'Name',\n                value: typename || '__FakeType',\n            },\n        },\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [frag],\n    };\n    return out;\n}\nfunction selectionSetFromObj(obj) {\n    if (typeof obj === 'number' ||\n        typeof obj === 'boolean' ||\n        typeof obj === 'string' ||\n        typeof obj === 'undefined' ||\n        obj === null) {\n        return null;\n    }\n    if (Array.isArray(obj)) {\n        return selectionSetFromObj(obj[0]);\n    }\n    var selections = [];\n    Object.keys(obj).forEach(function (key) {\n        var nestedSelSet = selectionSetFromObj(obj[key]);\n        var field = {\n            kind: 'Field',\n            name: {\n                kind: 'Name',\n                value: key,\n            },\n            selectionSet: nestedSelSet || undefined,\n        };\n        selections.push(field);\n    });\n    var selectionSet = {\n        kind: 'SelectionSet',\n        selections: selections,\n    };\n    return selectionSet;\n}\nvar justTypenameQuery = {\n    kind: 'Document',\n    definitions: [\n        {\n            kind: 'OperationDefinition',\n            operation: 'query',\n            name: null,\n            variableDefinitions: null,\n            directives: [],\n            selectionSet: {\n                kind: 'SelectionSet',\n                selections: [\n                    {\n                        kind: 'Field',\n                        alias: null,\n                        name: {\n                            kind: 'Name',\n                            value: '__typename',\n                        },\n                        arguments: [],\n                        directives: [],\n                        selectionSet: null,\n                    },\n                ],\n            },\n        },\n    ],\n};\n\nvar ApolloCache = (function () {\n    function ApolloCache() {\n    }\n    ApolloCache.prototype.transformDocument = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.transformForLink = function (document) {\n        return document;\n    };\n    ApolloCache.prototype.readQuery = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: options.query,\n            variables: options.variables,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.readFragment = function (options, optimistic) {\n        if (optimistic === void 0) { optimistic = false; }\n        return this.read({\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n            variables: options.variables,\n            rootId: options.id,\n            optimistic: optimistic,\n        });\n    };\n    ApolloCache.prototype.writeQuery = function (options) {\n        this.write({\n            dataId: 'ROOT_QUERY',\n            result: options.data,\n            query: options.query,\n            variables: options.variables,\n        });\n    };\n    ApolloCache.prototype.writeFragment = function (options) {\n        this.write({\n            dataId: options.id,\n            result: options.data,\n            variables: options.variables,\n            query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n        });\n    };\n    ApolloCache.prototype.writeData = function (_a) {\n        var id = _a.id, data = _a.data;\n        if (typeof id !== 'undefined') {\n            var typenameResult = null;\n            try {\n                typenameResult = this.read({\n                    rootId: id,\n                    optimistic: false,\n                    query: justTypenameQuery,\n                });\n            }\n            catch (e) {\n            }\n            var __typename = (typenameResult && typenameResult.__typename) || '__ClientData';\n            var dataToWrite = Object.assign({ __typename: __typename }, data);\n            this.writeFragment({\n                id: id,\n                fragment: fragmentFromPojo(dataToWrite, __typename),\n                data: dataToWrite,\n            });\n        }\n        else {\n            this.writeQuery({ query: queryFromPojo(data), data: data });\n        }\n    };\n    return ApolloCache;\n}());\n\nvar Cache;\n(function (Cache) {\n})(Cache || (Cache = {}));\n\nexport { ApolloCache, Cache };\n//# sourceMappingURL=bundle.esm.js.map\n"],"names":["getFragmentQueryDocument","Cache"],"mappings":"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"}
=======
{"version":3,"file":"bundle.umd.js","sources":["../src/utils.ts","../src/cache.ts","../src/types/Cache.ts"],"sourcesContent":["import {\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  FieldNode,\n  FragmentDefinitionNode,\n} from 'graphql';\n\nexport function queryFromPojo(obj: any): DocumentNode {\n  const op: OperationDefinitionNode = {\n    kind: 'OperationDefinition',\n    operation: 'query',\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery',\n    },\n    selectionSet: selectionSetFromObj(obj),\n  };\n\n  const out: DocumentNode = {\n    kind: 'Document',\n    definitions: [op],\n  };\n\n  return out;\n}\n\nexport function fragmentFromPojo(obj: any, typename?: string): DocumentNode {\n  const frag: FragmentDefinitionNode = {\n    kind: 'FragmentDefinition',\n    typeCondition: {\n      kind: 'NamedType',\n      name: {\n        kind: 'Name',\n        value: typename || '__FakeType',\n      },\n    },\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery',\n    },\n    selectionSet: selectionSetFromObj(obj),\n  };\n\n  const out: DocumentNode = {\n    kind: 'Document',\n    definitions: [frag],\n  };\n\n  return out;\n}\n\nfunction selectionSetFromObj(obj: any): SelectionSetNode {\n  if (\n    typeof obj === 'number' ||\n    typeof obj === 'boolean' ||\n    typeof obj === 'string' ||\n    typeof obj === 'undefined' ||\n    obj === null\n  ) {\n    // No selection set here\n    return null;\n  }\n\n  if (Array.isArray(obj)) {\n    // GraphQL queries don't include arrays\n    return selectionSetFromObj(obj[0]);\n  }\n\n  // Now we know it's an object\n  const selections: FieldNode[] = [];\n\n  Object.keys(obj).forEach(key => {\n    const field: FieldNode = {\n      kind: 'Field',\n      name: {\n        kind: 'Name',\n        value: key,\n      },\n    };\n\n    // Recurse\n    const nestedSelSet: SelectionSetNode = selectionSetFromObj(obj[key]);\n\n    if (nestedSelSet) {\n      field.selectionSet = nestedSelSet;\n    }\n\n    selections.push(field);\n  });\n\n  const selectionSet: SelectionSetNode = {\n    kind: 'SelectionSet',\n    selections,\n  };\n\n  return selectionSet;\n}\n\nexport const justTypenameQuery: DocumentNode = {\n  kind: 'Document',\n  definitions: [\n    {\n      kind: 'OperationDefinition',\n      operation: 'query',\n      name: null,\n      variableDefinitions: null,\n      directives: [],\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [\n          {\n            kind: 'Field',\n            alias: null,\n            name: {\n              kind: 'Name',\n              value: '__typename',\n            },\n            arguments: [],\n            directives: [],\n            selectionSet: null,\n          },\n        ],\n      },\n    },\n  ],\n};\n","import { DocumentNode } from 'graphql';\nimport { getFragmentQueryDocument } from 'apollo-utilities';\n\nimport { DataProxy, Cache } from './types';\nimport { justTypenameQuery, queryFromPojo, fragmentFromPojo } from './utils';\n\nexport type Transaction<T> = (c: ApolloCache<T>) => void;\n\nexport abstract class ApolloCache<TSerialized> implements DataProxy {\n  // required to implement\n  // core API\n  public abstract read<T, TVariables = any>(\n    query: Cache.ReadOptions<TVariables>,\n  ): T | null;\n  public abstract write<TResult = any, TVariables = any>(\n    write: Cache.WriteOptions<TResult, TVariables>,\n  ): void;\n  public abstract diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T>;\n  public abstract watch(watch: Cache.WatchOptions): () => void;\n  public abstract evict<TVariables = any>(\n    query: Cache.EvictOptions<TVariables>,\n  ): Cache.EvictionResult;\n  public abstract reset(): Promise<void>;\n\n  // intializer / offline / ssr API\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public abstract restore(\n    serializedState: TSerialized,\n  ): ApolloCache<TSerialized>;\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public abstract extract(optimistic?: boolean): TSerialized;\n\n  // optimistic API\n  public abstract removeOptimistic(id: string): void;\n\n  // transactional API\n  public abstract performTransaction(\n    transaction: Transaction<TSerialized>,\n  ): void;\n  public abstract recordOptimisticTransaction(\n    transaction: Transaction<TSerialized>,\n    id: string,\n  ): void;\n\n  // optional API\n  public transformDocument(document: DocumentNode): DocumentNode {\n    return document;\n  }\n  // experimental\n  public transformForLink(document: DocumentNode): DocumentNode {\n    return document;\n  }\n\n  // DataProxy API\n  /**\n   *\n   * @param options\n   * @param optimistic\n   */\n  public readQuery<QueryType, TVariables = any>(\n    options: DataProxy.Query<TVariables>,\n    optimistic: boolean = false,\n  ): QueryType | null {\n    return this.read({\n      query: options.query,\n      variables: options.variables,\n      optimistic,\n    });\n  }\n\n  public readFragment<FragmentType, TVariables = any>(\n    options: DataProxy.Fragment<TVariables>,\n    optimistic: boolean = false,\n  ): FragmentType | null {\n    return this.read({\n      query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n      variables: options.variables,\n      rootId: options.id,\n      optimistic,\n    });\n  }\n\n  public writeQuery<TData = any, TVariables = any>(\n    options: Cache.WriteQueryOptions<TData, TVariables>,\n  ): void {\n    this.write({\n      dataId: 'ROOT_QUERY',\n      result: options.data,\n      query: options.query,\n      variables: options.variables,\n    });\n  }\n\n  public writeFragment<TData = any, TVariables = any>(\n    options: Cache.WriteFragmentOptions<TData, TVariables>,\n  ): void {\n    this.write({\n      dataId: options.id,\n      result: options.data,\n      variables: options.variables,\n      query: getFragmentQueryDocument(options.fragment, options.fragmentName),\n    });\n  }\n\n  public writeData<TData = any>({\n    id,\n    data,\n  }: Cache.WriteDataOptions<TData>): void {\n    if (typeof id !== 'undefined') {\n      let typenameResult = null;\n      // Since we can't use fragments without having a typename in the store,\n      // we need to make sure we have one.\n      // To avoid overwriting an existing typename, we need to read it out first\n      // and generate a fake one if none exists.\n      try {\n        typenameResult = this.read({\n          rootId: id,\n          optimistic: false,\n          query: justTypenameQuery,\n        });\n      } catch (e) {\n        // Do nothing, since an error just means no typename exists\n      }\n\n      // tslint:disable-next-line\n      const __typename =\n        (typenameResult && typenameResult.__typename) || '__ClientData';\n\n      // Add a type here to satisfy the inmemory cache\n      const dataToWrite = Object.assign({ __typename }, data);\n\n      this.writeFragment({\n        id,\n        fragment: fragmentFromPojo(dataToWrite, __typename),\n        data: dataToWrite,\n      });\n    } else {\n      this.writeQuery({ query: queryFromPojo(data), data });\n    }\n  }\n}\n","import { DataProxy } from './DataProxy';\r\n\r\nexport namespace Cache {\r\n  export type WatchCallback = (newData: any) => void;\r\n  export interface EvictionResult {\r\n    success: Boolean;\r\n  }\r\n\r\n  export interface ReadOptions<TVariables = any>\r\n    extends DataProxy.Query<TVariables> {\r\n    rootId?: string;\r\n    previousResult?: any;\r\n    optimistic: boolean;\r\n  }\r\n\r\n  export interface WriteOptions<TResult = any, TVariables = any>\r\n    extends DataProxy.Query<TVariables> {\r\n    dataId: string;\r\n    result: TResult;\r\n  }\r\n\r\n  export interface DiffOptions extends ReadOptions {\r\n    returnPartialData?: boolean;\r\n  }\r\n\r\n  export interface WatchOptions extends ReadOptions {\r\n    callback: WatchCallback;\r\n  }\r\n\r\n  export interface EvictOptions<TVariables = any>\r\n    extends DataProxy.Query<TVariables> {\r\n    rootId?: string;\r\n  }\r\n\r\n  export import DiffResult = DataProxy.DiffResult;\r\n  export import WriteQueryOptions = DataProxy.WriteQueryOptions;\r\n  export import WriteFragmentOptions = DataProxy.WriteFragmentOptions;\r\n  export import WriteDataOptions = DataProxy.WriteDataOptions;\r\n  export import Fragment = DataProxy.Fragment;\r\n}\r\n"],"names":["getFragmentQueryDocument","Cache"],"mappings":"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"}
>>>>>>> b22d4f639358533e1bbd355b77d7a3342c6a63e8
