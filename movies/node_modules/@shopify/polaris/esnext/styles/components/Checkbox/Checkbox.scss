.p_td {
  position: relative;
}

.p_fo {
  // The basic checked styles have more specificity than this, so need to
  // basically duplicate that selector here, too.
  // stylelint-disable-next-line selector-max-specificity
  .p_wb:checked + .p_bz,
  .p_wb.p_ib + .p_bz,
  .p_bz {
    @include control-backdrop(error);
  }

  // We need to know if the input is focusing to change the border color.
  // stylelint-disable-next-line selector-max-specificity
  .p_wb:focus + .p_bz,
  .p_wb:active + .p_bz {
    @include control-backdrop(focused-error);
  }

  .p_j0 {
    @include recolor-icon(color('red', 'dark'));
  }
}

.p_wb {
  @include visually-hidden;

  &:focus,
  &:active,
  &:checked,
  &.p_ib {
    // stylelint-disable-next-line selector-max-class
    + .p_bz {
      background: color('indigo');
    }
  }

  &:checked,
  &.p_ib {
    // stylelint-disable-next-line selector-max-class
    ~ .p_j0 {
      transform: translate(-50%, -50%) scale(1);
    }
  }

  &:focus,
  &:active {
    + .p_bz {
      @include control-backdrop(focused);
    }
  }

  &:disabled {
    + .p_bz {
      @include control-backdrop(disabled);
    }

    ~ .p_j0 {
      @include recolor-icon(color('ink', 'lightest'));
    }
  }
}

.p_bz {
  @include control-backdrop;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

.p_j0 {
  @include recolor-icon(color('indigo'));
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  transform-origin: 50% 50%;
  transition: control-icon-transition();

  @media (-ms-high-contrast: active) {
    fill: ms-high-contrast-color('text');
  }
}
