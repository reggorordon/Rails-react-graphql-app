import * as React from 'react';
import { TranslationDictionary, PrimitiveReplacementDictionary, ComplexReplacementDictionary, WithAppProviderProps, CreatePolarisContext } from '../types';
import { Context } from '../AppProvider';
export declare function translate(id: string, translations: TranslationDictionary | TranslationDictionary[] | undefined, replacements?: PrimitiveReplacementDictionary | ComplexReplacementDictionary): string;
export declare function withAppProvider<OwnProps>(): <C>(WrappedComponent: (React.ComponentClass<OwnProps & WithAppProviderProps, React.ComponentState> & C) | (React.StatelessComponent<OwnProps & WithAppProviderProps> & C)) => React.ComponentClass<OwnProps, React.ComponentState> & C;
export declare function withSticky(): <OwnProps, C>(WrappedComponent: (React.ComponentClass<OwnProps & WithAppProviderProps, React.ComponentState> & C) | (React.StatelessComponent<OwnProps & WithAppProviderProps> & C)) => any;
export declare function createPolarisContext({ i18n, linkComponent, apiKey, shopOrigin, forceRedirect, debug, stickyManager, }?: CreatePolarisContext): Context;
