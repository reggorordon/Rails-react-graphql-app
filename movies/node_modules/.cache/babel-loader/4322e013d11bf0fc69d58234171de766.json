{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar assignAll_1 = require(\"./assignAll\");\n\nvar PROPERTY_EXCLUDES = ['length', 'name', 'arguments', 'called', 'prototype'];\n/**\n * Wraps a constructor in a wrapper function and copies all static properties\n * and methods to the new constructor.\n * @export\n * @param {Function} Ctor\n * @param {(Ctor: Function, ...args: any[]) => any} wrapper\n * @returns {Function}\n */\n\nfunction wrapConstructor(Ctor, wrapper) {\n  function ConstructorWrapper() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return wrapper.call.apply(wrapper, [this, Ctor].concat(args));\n  }\n\n  ConstructorWrapper.prototype = Ctor.prototype;\n  Object.defineProperty(ConstructorWrapper, 'name', {\n    // These values should coincide with the default descriptor values for `name`.\n    configurable: true,\n    enumerable: false,\n    value: Ctor.name,\n    writable: false\n  });\n  return assignAll_1.assignAll(ConstructorWrapper, Ctor, PROPERTY_EXCLUDES);\n}\n\nexports.wrapConstructor = wrapConstructor;","map":null,"metadata":{},"sourceType":"script"}