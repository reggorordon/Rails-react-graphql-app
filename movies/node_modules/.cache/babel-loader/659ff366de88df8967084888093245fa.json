{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar isUndefined = require(\"lodash/isUndefined\");\n/**\n * A map for weakly holding nested references.\n * @private\n * @export\n * @class CompositeKeyWeakMap\n * @template T\n */\n\n\nvar CompositeKeyWeakMap = function () {\n  function CompositeKeyWeakMap() {\n    this._weakMap = new WeakMap();\n  }\n\n  CompositeKeyWeakMap.prototype.set = function (keys, value) {\n    var map = this._weakMap;\n\n    for (var i = 0, len = keys.length - 1; i < len; i++) {\n      var key = keys[i];\n      var next = map.get(key);\n\n      if (!next) {\n        next = new Map();\n        map.set(key, next);\n      }\n\n      map = next;\n    }\n\n    map.set(keys[keys.length - 1], value);\n  };\n\n  CompositeKeyWeakMap.prototype.get = function (keys) {\n    var next = this._weakMap;\n\n    for (var i = 0, len = keys.length; i < len; i++) {\n      next = next.get(keys[i]);\n\n      if (isUndefined(next)) {\n        break;\n      }\n    }\n\n    return next;\n  };\n\n  CompositeKeyWeakMap.prototype.has = function (keys) {\n    return !isUndefined(this.get(keys));\n  };\n\n  return CompositeKeyWeakMap;\n}();\n\nexports.CompositeKeyWeakMap = CompositeKeyWeakMap;","map":null,"metadata":{},"sourceType":"script"}