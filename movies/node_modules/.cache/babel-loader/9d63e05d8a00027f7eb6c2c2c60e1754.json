{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar identity = require(\"lodash/identity\");\n\nvar Applicator_1 = require(\"./Applicator\");\n\nvar utils_1 = require(\"../utils\");\n\nvar ComposeApplicator = function (_super) {\n  tslib_1.__extends(ComposeApplicator, _super);\n\n  function ComposeApplicator(_config) {\n    if (_config === void 0) {\n      _config = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this._config = _config;\n    return _this;\n  }\n\n  Object.defineProperty(ComposeApplicator.prototype, \"post\", {\n    get: function get() {\n      return this._config.post === true;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ComposeApplicator.prototype.apply = function (_a) {\n    var execute = _a.config.execute,\n        _b = _a.value,\n        value = _b === void 0 ? identity : _b,\n        args = _a.args,\n        target = _a.target;\n    var applicator = this;\n    return function () {\n      var _this = this;\n\n      var invokeArgs = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        invokeArgs[_i] = arguments[_i];\n      }\n\n      var _args = args.map(function (method) {\n        return utils_1.resolveFunction(method, _this, target);\n      }).slice();\n\n      if (applicator.post) {\n        _args.push(value);\n      } else {\n        _args.unshift(value);\n      }\n\n      return execute.apply(void 0, _args).apply(this, invokeArgs);\n    };\n  };\n\n  return ComposeApplicator;\n}(Applicator_1.Applicator);\n\nexports.ComposeApplicator = ComposeApplicator;","map":null,"metadata":{},"sourceType":"script"}