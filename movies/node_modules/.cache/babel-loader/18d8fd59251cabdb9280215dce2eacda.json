{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar isFunction = require(\"lodash/isFunction\");\n\nvar utils_1 = require(\"./utils\");\n\nvar factory_1 = require(\"./factory\");\n/**\n * Binds methods of an object to the object itself, overwriting the existing method.\n * @export\n * @param {string[]} [methods=[]]\n * @returns {ClassDecorator}\n * @example\n *\n * @BindAll()\n * class MyClass {\n *   bound() {\n *     return this;\n *   }\n *\n *   unbound() {\n *     return this;\n *   }\n * }\n *\n * const myClass = new MyClass();\n *\n * myClass.bound.call(null); // => MyClass {}\n * myClass.unbound.call(null); // => MyClass {}\n */\n\n\nfunction BindAll(methods) {\n  if (methods === void 0) {\n    methods = [];\n  }\n\n  return function (target) {\n    return utils_1.wrapConstructor(target, function (Ctor) {\n      var args = [];\n\n      for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n      }\n\n      bindAllMethods(target, this, methods);\n      Ctor.apply(this, args);\n    });\n  };\n}\n\nexports.BindAll = BindAll;\nexports.bindAll = BindAll;\n\nfunction bindAllMethods(target, instance, methods) {\n  if (methods === void 0) {\n    methods = [];\n  }\n\n  var proto = target.prototype;\n\n  while (proto && proto !== Object.prototype) {\n    for (var _i = 0, _a = Object.getOwnPropertyNames(proto); _i < _a.length; _i++) {\n      var key = _a[_i];\n      var include = methods.length ? methods.indexOf(key) !== -1 : true;\n      var descriptor = Object.getOwnPropertyDescriptor(proto, key);\n\n      if (include && key !== 'constructor' && !instance.hasOwnProperty(key)) {\n        // If this property is a getter and it's NOT an instance decorated\n        // method, ignore it. Instance decorators are getters until first accessed.\n        if (descriptor.get) {\n          var chainData = factory_1.InstanceChainMap.get([proto, key]);\n\n          if (!chainData || !chainData.isMethod) {\n            continue;\n          }\n        }\n\n        var value = instance[key];\n\n        if (isFunction(value)) {\n          Object.defineProperty(instance, key, {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            value: utils_1.copyMetadata(value.bind(instance), value),\n            writable: descriptor.writable\n          });\n        }\n      }\n    }\n\n    proto = Object.getPrototypeOf(proto);\n  }\n}\n\nexports.default = BindAll;","map":null,"metadata":{},"sourceType":"script"}