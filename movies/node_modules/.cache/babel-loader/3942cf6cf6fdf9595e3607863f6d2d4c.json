{"ast":null,"code":"import _classCallCheck from \"/Users/reggordon/src/github.com/Shopify/movies-graphql_with_frontend/movies/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/reggordon/src/github.com/Shopify/movies-graphql_with_frontend/movies/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/reggordon/src/github.com/Shopify/movies-graphql_with_frontend/movies/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/reggordon/src/github.com/Shopify/movies-graphql_with_frontend/movies/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/reggordon/src/github.com/Shopify/movies-graphql_with_frontend/movies/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/reggordon/src/github.com/Shopify/movies-graphql_with_frontend/movies/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/reggordon/src/github.com/Shopify/movies-graphql_with_frontend/movies/src/components/MovieList.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    movies {\\n      id\\n      description\\n      title\\n      reviews {\\n        content\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\"; //grab query from server\n\nvar MOVIES_QUERY = gql(_templateObject());\n\nvar MovieList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MovieList, _Component);\n\n  function MovieList() {\n    _classCallCheck(this, MovieList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MovieList).apply(this, arguments));\n  }\n\n  _createClass(MovieList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Query, {\n        query: MOVIES_QUERY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, function (_ref) {\n        var loading = _ref.loading,\n            error = _ref.error,\n            data = _ref.data;\n        if (loading) return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"Fetching\");\n        if (error) return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Nope!\");\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \" A list of Movies\"), React.createElement(\"div\", {\n          className: \"col-sm-12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, data.movies.map(function (_ref2) {\n          var id = _ref2.id,\n              title = _ref2.title,\n              description = _ref2.description,\n              reviews = _ref2.reviews;\n          return React.createElement(\"div\", {\n            key: id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"pa3 bg-black-05 ma3\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"book\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            align: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, id), React.createElement(\"h3\", {\n            align: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, title), React.createElement(\"h3\", {\n            align: \"center\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, description))));\n        })));\n      });\n    }\n  }]);\n\n  return MovieList;\n}(Component);\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/reggordon/src/github.com/Shopify/movies-graphql_with_frontend/movies/src/components/MovieList.js"],"names":["React","Component","Query","gql","MOVIES_QUERY","MovieList","loading","error","data","movies","map","id","title","description","reviews"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CAEA;;AACA,IAAMC,YAAY,GAAGD,GAAH,mBAAlB;;IAaME,S;;;;;;;;;;;;;6BACK;AACP,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAED,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAA8B;AAAA,YAA3BE,OAA2B,QAA3BA,OAA2B;AAAA,YAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,YAAXC,IAAW,QAAXA,IAAW;AAC7B,YAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACb,YAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACX,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADG,EAEH;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,IAAI,CAACC,MAAL,CAAYC,GAAZ,CACC;AAAA,cAAGC,EAAH,SAAGA,EAAH;AAAA,cAAOC,KAAP,SAAOA,KAAP;AAAA,cAAcC,WAAd,SAAcA,WAAd;AAAA,cAA2BC,OAA3B,SAA2BA,OAA3B;AAAA,iBACE;AAAK,YAAA,GAAG,EAAEH,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAI,YAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoBA,EAApB,CADF,EAEE;AAAI,YAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoBC,KAApB,CAFF,EAGE;AAAI,YAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAoBC,WAApB,CAHF,CADF,CADF,CADF;AAAA,SADD,CADH,CAFG,CAAP;AAkBD,OAtBH,CADF;AA0BD;;;;EA5BqBZ,S;;AA+BxB,eAAeI,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\n//grab query from server\nconst MOVIES_QUERY = gql`\n  {\n    movies {\n      id\n      description\n      title\n      reviews {\n        content\n      }\n    }\n  }\n`;\n\nclass MovieList extends Component {\n  render() {\n    return (\n      <Query query={MOVIES_QUERY}>\n        {({ loading, error, data }) => {\n          if (loading) return <div>Fetching</div>;\n          if (error) return <div>Nope!</div>;\n          return <div>\n              <h1> A list of Movies</h1>\n              <div className=\"col-sm-12\">\n                {data.movies.map(\n                  ({ id, title, description, reviews }) => (\n                    <div key={id}>\n                      <div className=\"pa3 bg-black-05 ma3\">\n                        <div className=\"book\">\n                          <h3 align=\"center\">{id}</h3>\n                          <h3 align=\"center\">{title}</h3>\n                          <h3 align=\"center\">{description}</h3>\n                        </div>\n                      </div>\n                    </div>\n                  )\n                )}\n              </div>\n            </div>;\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}